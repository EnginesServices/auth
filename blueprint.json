{
  "schema": {
    "type": "service_blueprint",
    "version": {
      "major": 0,
      "minor": 1
    },
    "origin": "Engines Developer Studio 0.2"
  },
  "metadata": {
    "blueprint": {
      "version": {
        "major": 0,
        "minor": 0,
        "level": "rc",
        "patch": 0
      }
    },
    "software": {
      "display": {
        "title": "Authentication ticket service",
        "label": "Auth",
        "description": "Kerberos implementation for engines"
      }
    },
    "timestamp": "2018-09-27T10:53:15+10:00"
  },
  "software": {
    "base": {
      "name": "auth",
      "publisher_namespace": "EnginesSystem",
      "type_path": "auth",
      "service_handle_field": "kerberos",
      "parent_image": "engines/servicebase",
      "deployment_type": "worker",
      "set_state": "running",
      "default_stop_timeout": 0,
      "restart_policy": "always",
      "restart_attempts": 0,
      "memory": {
        "required": 96,
        "recommended": 96
      },
      "run_as_user": "auth",
      "create_user": "0"
    },
    "disposition": {
      "persistent": true,
      "start_syslog": true
    },
    "scripts": {
      "start": {
        "language": "sh",
        "content": "#!/bin/sh\r\nPID_FILES=\"/var/run/krb5kdc.pid /var/run/krb5admin.pid\"\r\n\r\nPID_FILE=/var/run/krb5kdc.pid \r\nexport PID_FILE\r\n\r\nKILL_SCRIPT=/home/engines/scripts/signal/kill_kerberos.sh\r\nexport KILL_SCRIPT\r\n\r\n. /home/engines/functions/trap.sh\r\nservice_first_run_check\r\n\r\nsudo -n /home/engines/scripts/startup/_start.sh &\r\nwait\r\n\r\n\r\nshutdown_complete"
      },
      "start_sudo": {
        "language": "sh",
        "content": "#!/bin/sh\r\n\r\nif ! test -f /home/engines/run/flags/first_run.done\r\n then\r\n   /home/engines/scripts/first_run/first_run.sh >/var/log/first_run.log\r\n   touch /home/engines/run/flags/first_run.stage1_done\r\nfi   \r\n\r\n/usr/sbin/krb5kdc -P /home/engines/run/krb5kdc.pid -n &\r\nkpid=$! \r\n/usr/sbin/kadmind -P /home/engines/run/krb5admin.pid -nofork  &\r\n\r\n. /home/engines/functions/system_functions.sh\r\n\r\n\r\nif test -f /home/engines/run/flags/first_run.stage1_done\r\n then\r\n  . /home/engines/scripts/first_run/create_keys_func.sh  \r\n   echo addprinc -pw password  admin@ENGINES.INTERNAL | kadmin.local \r\n   create_init_keys\r\n   rm /home/engines/run/flags/first_run.stage1_done\r\n   touch /home/engines/run/flags/first_run.done\r\nfi \r\nstartup_complete\r\nwait $kpid \t\r\n\r\n\r\nexit_code=$?\r\n \r\nshutdown_complete\r\n"
      },
      "shutdown_sudo": {
        "content": "#!/bin/sh\r\n\r\nPID_FILES=\"/home/engines/run/krb5kdc.pid /home/engines/run/krb5admin.pid\"\r\n\r\n. /home/engines/functions/signals.sh\r\n\r\nSIGNAL=$1\r\n\r\ndefault_signal_processor\r\n\r\nexit 0\r\n"
      }
    },
    "system_packages": [
      {
        "package": "krb5-kdc"
      },
      {
        "package": "krb5-admin-server"
      }
    ],
    "service_configurations": [
      {
        "publisher_namespace": "EnginesSystem",
        "type_path": "filesystem/local/filesystem",
        "variables": {
          "service_name": "krbkdc_etc",
          "volume_src": "krb5kdc",
          "engine_path": "/etc/krb5kdc",
          "permissions": "rw",
          "user": "0",
          "group": "0"
        }
      },
      {
        "publisher_namespace": "EnginesSystem",
        "type_path": "filesystem/local/filesystem",
        "variables": {
          "service_name": "krbkdc_lib",
          "volume_src": "krb5",
          "engine_path": " /var/krb5",
          "permissions": "rw",
          "user": "0",
          "group": "0"
        }
      }
    ],
    "constants": [
      {
        "name": "backup_support",
        "value": "true"
      }
    ],
    "target_environment_variables": [
      {
        "variable_name": "kerberos",
        "environment_variable_name": "K_KEY"
      }
    ],
    "consumers": {
      "accepts": [
        "ManagedEngine",
        "ManagedService"
      ]
    },
    "consumer_scripts": {
      "add": {
        "language": "sh",
        "content": "#!/bin/bash\r\n\r\n. /home/engines/functions/params_to_env.sh\r\nparams_to_env\r\n\r\nrequired_values=\"parent_engine container_type owner\"\r\ncheck_required_values\r\nexport parent_engine container_type owner\r\nerr_log=`mktemp`\r\nsudo -n /home/engines/scripts/services/_add_service.sh &> $err_log\r\nr=$?\r\nif test $r -ne 0\r\n then\r\n  echo -n \"Failed:\"\r\n  cat $err_log  \r\nelse\r\n echo \"Success\"\r\nfi\r\nrm $err_log\r\nexit  $r"
      },
      "add_sudo": {
        "language": "sh",
        "content": "#!/bin/bash\r\n\r\nfunction gen_service_key {\r\n\r\necho addprinc -randkey host/$parent_engine.engines.internal@ENGINES.INTERNAL | kadmin.local\r\nr=$?\r\n\r\n if test $r -ne 0\r\n  then\r\n   echo \"Failed to create principle  host/$parent_engine.engines.internal\"\r\n else \r\n  mkdir -p /etc/krb5kdc/${container_type}s/$parent_engine \r\n  echo ktadd -k /etc/krb5kdc/${container_type}s/$parent_engine/$parent_engine.keytab host/$parent_engine.engines.internal@ENGINES.INTERNAL | kadmin.local\r\n  r=$?\r\n   if test $r -ne 0\r\n  then\r\n   echo \"Failed to create principle  host/$parent_engine.engines.internal\"\r\n  fi  \r\n fi  \r\n if ! test -z $owner\r\n  then\r\n   if test ${container_type} = app\r\n    then\r\n     if test -f /home/engines/system/containers/${container_type}s/$parent_engine/uid\r\n       then\r\n        uid=`cat /home/engines/system/containers/${container_type}s/$parent_engine/uid`\r\n     else\r\n       fw=`cat /home/engines/system/containers/${container_type}s/$parent_engine/frame_work`\r\n       uid=`grep ${fw} /home/engines/system/framework_user_uids |awk '{print $3}' | head -1`        \r\n     fi\r\n   else\r\n    uid=`cat /home/engines/system/containers/${container_type}s/$parent_engine/uid`\r\n   fi    \r\nelse\r\n  uid=$owner\r\nfi\r\nchown $uid /etc/krb5kdc/${container_type}s/$parent_engine/$parent_engine.keytab  \r\n}\r\n\r\ngen_service_key\r\n\r\nexit $r\r\n"
      },
      "remove": {
        "language": "sh",
        "content": "#!/bin/bash\r\n\r\n. /home/engines/functions/params_to_env.sh\r\nparams_to_env\r\n\r\nrequired_values=\"parent_engine container_type\"\r\ncheck_required_values\r\nexport parent_engine container_type\r\nerr_log=`mktemp`\r\nsudo -n /home/engines/scripts/services/_rm_service.sh >& $err_log\r\nr=$?\r\nif test $r -ne 0\r\n then\r\n  echo -n \"Failed:\"\r\n  cat $err_log  \r\nelse\r\n echo \"Success\"\r\nfi\r\nrm $err_log\r\nexit $r\r\n"
      },
      "remove_sudo": {
        "language": "sh",
        "content": "#!/bin/sh\r\n\r\necho delprinc  host/$parent_engine.engines.internal@ENGINES.INTERNAL | kadmin.local \r\nr=$?\r\n\r\nif test $r -eq 0 \r\n then\r\n  rm -r /etc/krb5kdc/${container_type}s/$parent_engine \r\nfi\r\n\r\nexit $r\r\n\r\n"
      }
    },
    "consumer_params": [
      {
        "name": "kerberos",
        "value": "_Engines_Builder(engine_name)",
        "mandatory": true,
        "immutable": true,
        "ask_at_build_time": true,
        "input": {
          "type": "string",
          "title": "Key Name",
          "validation": {
            "pattern": "^[a-zA-Z]+$",
            "message": "letters only"
          }
        }
      },
      {
        "name": "owner",
        "value": "_Engines_Builder(cont_user_id)",
        "mandatory": true,
        "immutable": true,
        "ask_at_build_time": true,
        "input": {
          "type": "hidden"
        }
      }
    ],
    "actionators": [
      {
        "name": "list_principles",
        "label": "List principles",
        "return_type": "json",
        "script": {
          "language": "sh",
          "content": "#!/bin/sh\r\nsudo -n /home/engines/scripts/actionators/_list_principles.sh"
        },
        "script_sudo": {
          "language": "sh",
          "content": "#!/bin/sh\r\nn=0\r\necho -n '{\"principles\":['\r\nfor princ in `kadmin.local -q listprincs|grep -v \"Authenticating as principal\"`\r\n do  \r\n   if test $n -ne 0\r\n    then\r\n     echo   -n ',\"'$princ'\"'\r\n    else\r\n      echo -n '\"'$princ'\"'\r\n    fi\r\n    n=1  \r\n done\r\n \r\n echo ']}'\r\n "
        }
      },
      {
        "name": "list_policies",
        "label": "List policies",
        "return_type": "json",
        "script": {
          "content": "#!/bin/sh\r\nsudo -n /home/engines/scripts/actionators/_list_principles.sh"
        },
        "script_sudo": {
          "content": "#!/bin/sh\r\nn=0\r\necho -n '{\"principles\":['\r\nfor princ in `kadmin.local -q listprincs|grep -v \"Authenticating as principal\"`\r\n do  \r\n   if test $n -ne 0\r\n    then\r\n     echo   -n ',\"'$princ'\"'\r\n    else\r\n      echo -n '\"'$princ'\"'\r\n    fi\r\n    n=1  \r\n done\r\n \r\n echo ']}'\r\n "
        }
      }
    ],
    "service_dependencies": [
      "dns"
    ],
    "log_directories": [
      "/var/log/"
    ],
    "build_dependencies": [
      "../../01.BaseImages/02.servicebase/"
    ],
    "backup_scripts": {
      "backup": {
        "language": "sh",
        "content": "#!/bin/sh\r\n\r\nsudo -n /home/engines/scripts/backup/_backup.sh"
      },
      "backup_sudo": {
        "language": "sh",
        "content": "#!/bin/sh\r\n\r\nkdb5_util dump - 2>/tmp/backup.errs\r\nr=$?\r\nif test $r -ne 0\r\n then\r\n  cat /tmp/backup.errs \r\nfi  \r\nexit $r"
      },
      "restore": {
        "language": "sh",
        "content": "#!/bin/sh\r\n\r\ncat - | sudo -n /home/engines/scripts/backup/_restore.sh \"$1\" \"$2\""
      },
      "restore_sudo": {
        "content": "#!/bin/sh\r\no=`mktemp`\r\nif test -z $1\r\n then\r\n  type=''\r\nelif test $1 = true\r\n then\r\n  type=''\r\n else\r\n  type=-update\r\nfi \r\ncat - > $o\r\n kdb5_util load $type $o 2>/tmp/restore.errs\r\nr=$?\r\nrm $o\r\nif test $r -ne 0\r\n then\r\n  cat /tmp/restore.errs   \r\nfi  \r\nexit $r"
      }
    }
  }
}
